<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FUB//9k=
</value>
  </data>
</root>